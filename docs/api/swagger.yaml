openapi: 3.0.3
info:
  title: Secret Management API
  description: An API for securely managing secrets using tokens.
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /secret/write:
    post:
      summary: Save a secret in website storage
      operationId: writeSecret
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  description: The secret to be saved.
                  example: "My secret password"
                password:
                  type: string
                  description: A custom user token that will not be stored on the server
                  example: "G7lK#8!2"
              required:
                - secret
                - password
      responses:
        '200':
          description: Tokens for accessing the secret.
          content:
            application/json:
              schema:
                type: object
                properties:
                  first:
                    type: string
                    description: The first part of the access token.
                    example: "d7ffcb05b9fcdbabf3149a1d4e3bda6c2edcf09ab76f6b5d184a6c6a4f263fa1"
                  second:
                    type: string
                    description: The second part of the access token.
                    example: "G7lK#8!2"
        '404':
          description: Invalid request.
  /secret/read:
    get:
      summary: Retrieve a secret
      operationId: readSecret
      parameters:
        - name: token1
          in: query
          required: true
          schema:
            type: string
            description: The first part of the access token.
            example: "d7ffcb05b9fcdbabf3149a1d4e3bda6c2edcf09ab76f6b5d184a6c6a4f263fa1"
        - name: token2
          in: query
          required: true
          schema:
            type: string
            description: The second part of the access token.
            example: "G7lK#8!2"
      responses:
        '200':
          description: The retrieved secret.
          content:
            application/json:
              schema:
                type: object
                properties:
                  secret:
                    type: string
                    description: The stored secret.
        '404':
          description: Secret not found.
